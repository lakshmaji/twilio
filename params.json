{
  "name": "Twilio - Laravel",
  "tagline": "by Ananth",
  "body": "# Laravel - Twilio\r\n[Wiki on web](http://lakshmajim.github.io/plivo/)\r\n\r\n>##WHAT IT IS?\r\n\r\n- This package is used to send sms to any mobile number.\r\n- This uses [Twilio](https://www.twilio.com/) API.\r\n- It requires *AccountSID* and *AuthToken*, they can be generated by registrting @at [Twilio](https://www.twilio.com/try-twilio)\r\n  - after registration click on Account ,there you will be able to see authsid and authtoken. \r\n  - You have assigned a sender mobile number which can be found at [Twilio](https://www.twilio.com/user/account/phone-numbers/incoming),which is used to send Text Messages or MMS and ShortCodes etc.\r\n\r\n***\r\n\r\n>##INSTALLATION\r\n\r\n - Download package form  https://github.com/lakshmajim/twilio . \r\n - OR YOU CAN RUN FOLLOWING COMMAND FROM TERMINAL\r\n - With composer you can run this line **composer require lakshmajim/twilio**\r\n\r\nRun this command from the Terminal:\r\n\r\n```bash\r\n    composer require lakshmajim/twilio\r\n    composer dumpautoload\r\n    composer update\r\n```\r\n\r\n***\r\n\r\n>##Laravel INTEGRATION\r\n\r\nyou need to add the service provider. Open `app/config/app.php`, and add a new item to the providers array.\r\n```php\r\n  Lakshmajim\\Twilio\\TwilioServiceProvider::class,\r\n```\r\nThen, add a Facade for more convenient usage. In `app/config/app.php` add the following line to the `aliases` array:\r\n```php\r\n  'Twilio'    => Lakshmajim\\Twilio\\Facade\\Twilio::class,\r\n```\r\nAgain do composer update\r\n\r\n***\r\n\r\n#METHOD 1:\r\n>###Sending SMS\r\n\r\n```php\r\n\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Http\\Requests;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse Twilio; \r\n\r\n\r\n/**\r\n * Twilio - Package usage Example\r\n *\r\n * @access  public\r\n * @since   1.2.0\r\n * @author  lakshmaji \r\n */\r\nclass TwilioTest extends Controller\r\n{\r\n  public function testMesssage()\r\n  {\r\n\r\n    // initialize message array \r\n    $message_array = array(\r\n        'sender_id'     => 'TWILIO_AUTH_ID',\r\n        'sender_secret' => 'TWILIO_AUTH_SECRET',\r\n        'reciver_mobile' => '999999999',\r\n        'media_url' => 'http://goo.gl/F9igRq',\r\n        'otp'     =>'325565',\r\n        'sender' => 'TWILIO_SOURCE_NUMBER'\r\n    );\r\n\r\n\r\n    // This will send message only\r\n    $sms_response = Twilio::message($message_array,$op=\"only msg\", true,  false, false ); \r\n\r\n    return response()->json($sms_response,200);\r\n  }\r\n\r\n}\r\n// end of class TwilioTest\r\n// end of file TwilioTest.php\r\n\r\n```\r\n\r\n>###message(array, string, boolean, boolean, boolean)\r\n\r\n\r\n```php\r\n\r\n    $message_array = array(\r\n        'sender_id'     => 'TWILIO_AUTH_SID',\r\n        'sender_secret' => 'TWILIO_AUTH_SECRET',\r\n        'reciver_mobile' => 'MOBILE_NUMBER',\r\n        'media_url' => 'MEDIA_URL',\r\n        'otp'     =>'OTP',\r\n        'sender' => 'TWILIO_SOURCE_NUMBER'\r\n    );\r\n  \r\n```\r\n\r\nThe message_array contains follwing parameters \r\n\r\n| PARAMETER           | DESCRIPTION                             |\r\n|:-------------- |:----------------------------------------| \r\n|sender_id   | This is the key defined in \".env\" file for auth_sid                | \r\n|sender_secret| This is the key defined in \".env\" file for auth_secret                  |\r\n|  sender         | This is the key defined in .env file for sender mobile number  |\r\n|reciver_mobile| This is the receivers mobile number|\r\n|media_url|This is the \"uri\" for mutimedia|\r\n|otp|This key values associates with the otp|\r\n     \r\n \r\n        \r\n\r\n      \r\n             \r\n\r\n\r\n>###Example code for Laravel along with sample .env file\r\n\r\n**.env file**\r\n```erlang\r\n\r\nAPP_ENV=local\r\nAPP_DEBUG=true\r\nAPP_KEY=BPfhzoGJ7RJB8D3qoyP6KZ2MjX2MAzcN\r\n\r\nDB_HOST=127.0.0.1\r\nDB_DATABASE=homestead\r\nDB_USERNAME=homestead\r\nDB_PASSWORD=secret\r\n\r\nCACHE_DRIVER=file\r\nSESSION_DRIVER=file\r\nQUEUE_DRIVER=sync\r\n\r\nREDIS_HOST=127.0.0.1\r\nREDIS_PASSWORD=null\r\nREDIS_PORT=6379\r\n\r\nMAIL_DRIVER=smtp\r\nMAIL_HOST=mailtrap.io\r\nMAIL_PORT=2525\r\nMAIL_USERNAME=null\r\nMAIL_PASSWORD=null\r\nMAIL_ENCRYPTION=null\r\n\r\n\r\nTWILIO_SOURCE_MOBILE_NUMBER=+447481338931\r\nTWILIO_USER_ID=AC5f0d5a51944ddbf821ea00c2bfd8a04e\r\nTWILIO_USER_PASSWORD=a0fb1706748dc12ccbb9501b5b904a74\r\n\r\n```\r\n\r\n***\r\n\r\n\r\nThe code to use above \".env\" file is given below\r\n```php\r\n\r\n<?php\r\n\r\nnamespace App\\Http\\Controllers;\r\n\r\nuse Illuminate\\Http\\Request;\r\nuse App\\Http\\Requests;\r\nuse App\\Http\\Controllers\\Controller;\r\nuse Twilio; \r\n\r\n\r\n/**\r\n * Twilio - Package usage Example\r\n *\r\n * @access  public\r\n * @since   1.2.0\r\n * @author  lakshmaji \r\n */\r\nclass TwilioTest extends Controller\r\n{\r\n  public function testMesssage()\r\n  {\r\n\r\n    // initialize message array \r\n    $message_array = array(\r\n        'sender_id'     => 'TWILIO_USER_ID',\r\n        'sender_secret' => 'TWILIO_USER_PASSWORD',\r\n        'reciver_mobile' => '99999999999',\r\n        'media_url' => 'http://goo.gl/F9igRq',\r\n        'otp'     =>'325456',\r\n        'sender' => 'TWILIO_SOURCE_MOBILE_NUMBER'\r\n    );\r\n\r\n    // This will send OTP only\r\n    $sms_response = Twilio::message($message_array,$op=\"otp only\", false, true,  false ); // otp\r\n\r\n    return response()->json($sms_response,200);\r\n  }\r\n\r\n}\r\n// end of class TwilioTest\r\n// end of file TwilioTest.php\r\n\r\n\r\n```\r\n\r\n###miscellaneous\r\n##To send SMS\r\n```php\r\n  Twilio::message($message_array,$op=\"only msg\", true,  false, false ); // sms\r\n```\r\n\r\n##To send MMS\r\n```php\r\n  Twilio::message($message_array,$op=\"only MMS\", false, false, true  ); // media\r\n```\r\n##To send OTP\r\n```php\r\n  Twilio::message($message_array,$op=\"only verfication code\", false, true,  false ); // otp\r\n```\r\n##To send both SMS and MMS\r\n```php\r\n  Twilio::message($message_array,$op=\"This is combaination both SMS and MMS\", true,  false, true  ); // sms , media \r\n```\r\n\r\n>### Responses\r\n\r\n| CODE           | DESCRIPTION                             |\r\n|:-------------- |:----------------------------------------| \r\n|16000   | Error due to all flags are set to false or no flag was set| \r\n|16001|Error due to all flags were set to true |\r\n|16002|No sms type was set witin the avialbel list of flag parameters|\r\n|16003|Un handled error|\r\n\r\n***\r\n>###> Handling Exceptions\r\n\r\n```php\r\n<?php\r\n\r\nnamespace App\\Exceptions;\r\n\r\nuse Exception;\r\nuse Lakshmajim\\Twilio\\Exception\\TwilioException;\r\n\r\n\r\n/**\r\n * Twilio - A Simple Exception handler class to Catch\r\n * Exceptions thrown by TwilioException class \r\n *\r\n * @author   lakshmaji \r\n */\r\nclass Handler extends ExceptionHandler\r\n{\r\n \r\n    //....\r\n    //.................\r\n    //....\r\n    \r\n     /**\r\n     * Render an exception into an HTTP response.\r\n     *\r\n     * @param  \\Illuminate\\Http\\Request  $request\r\n     * @param  \\Exception  $e\r\n     * @return \\Illuminate\\Http\\Response\r\n     */\r\n    public function render($request, Exception $e)\r\n    {\r\n        if($e instanceof TwilioException)\r\n        {\r\n            return response()->json(array('message'=>$e->getMessage(),'status' =>$e->getStatusCode()),500);\r\n        }\r\n        return parent::render($request, $e);\r\n    }\r\n}\r\n\r\n```\r\nIn laravel we can easily handle the errors by using Handler.php (You can use custom Exception Handlr too)\r\n\r\n\r\n>###Inavlid method calls\r\n\r\n   Twilio::message($message_array,$op=\"All set to true sms,mms,otp\", true,  true,  true  ); // sms , otp , media\r\n   Twilio::message($message_array,$op=\"all set to false\", false, false, false ); // none defined\r\n   Twilio::message($message_array,$op=\"all considered to be false\"); //none defined\r\n   Twilio::message($message_array); \r\n\r\n\r\n\r\n\r\n***\r\n\r\n\r\n\r\n\r\n>## TWILIO TRAIL ACCOUNT USAGE:\r\n\r\n - If You are trying to implement SMS functionality with Twilio the you need to verify the list of destination mobile numbers at [Twilio](https://www.twilio.com/user/account/phone-numbers/verified)\r\n![VERIFIED NUMBERS](https://raw.githubusercontent.com/lakshmajim/images/master/verified_numbers.png)\r\n - Before sending MESSAGE make sure that you have enabled **GEO-PERMISSIONS** at [Twilio](https://www.twilio.com/user/account/settings/international)\r\n![GEO PERMISSIONS](https://raw.githubusercontent.com/lakshmajim/images/master/geo_permissions.png)\r\n\r\n***\r\n\r\n>##Licence\r\n\r\n[*MIT License (MIT)*](https://opensource.org/licenses/MIT)\r\n\r\n@ MUTYALA ANANTHA LAKSHMAJI\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}